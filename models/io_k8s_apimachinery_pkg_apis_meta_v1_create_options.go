// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IoK8sApimachineryPkgApisMetaV1CreateOptions CreateOptions may be provided when creating an API object.
//
// swagger:model io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions
type IoK8sApimachineryPkgApisMetaV1CreateOptions struct {

	// When present, indicates that modifications should not be
	// persisted. An invalid or unrecognized dryRun directive will
	// result in an error response and no further processing of the
	// request. Valid values are:
	// - All: all dry run stages will be processed
	// +optional
	DryRun []string `json:"dryRun"`

	// fieldManager is a name associated with the actor or entity
	// that is making these changes. The value must be less than or
	// 128 characters long, and only contain printable characters,
	// as defined by https://golang.org/pkg/unicode/#IsPrint.
	// +optional
	FieldManager string `json:"fieldManager,omitempty"`
}

// Validate validates this io k8s apimachinery pkg apis meta v1 create options
func (m *IoK8sApimachineryPkgApisMetaV1CreateOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this io k8s apimachinery pkg apis meta v1 create options based on context it is used
func (m *IoK8sApimachineryPkgApisMetaV1CreateOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sApimachineryPkgApisMetaV1CreateOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sApimachineryPkgApisMetaV1CreateOptions) UnmarshalBinary(b []byte) error {
	var res IoK8sApimachineryPkgApisMetaV1CreateOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
