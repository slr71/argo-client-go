// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IoArgoprojWorkflowV1alpha1SemaphoreHolding io argoproj workflow v1alpha1 semaphore holding
//
// swagger:model io.argoproj.workflow.v1alpha1.SemaphoreHolding
type IoArgoprojWorkflowV1alpha1SemaphoreHolding struct {

	// Holders stores the list of current holder names in the io.argoproj.workflow.v1alpha1.
	Holders []string `json:"holders"`

	// Semaphore stores the semaphore name.
	Semaphore string `json:"semaphore,omitempty"`
}

// Validate validates this io argoproj workflow v1alpha1 semaphore holding
func (m *IoArgoprojWorkflowV1alpha1SemaphoreHolding) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this io argoproj workflow v1alpha1 semaphore holding based on context it is used
func (m *IoArgoprojWorkflowV1alpha1SemaphoreHolding) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IoArgoprojWorkflowV1alpha1SemaphoreHolding) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoArgoprojWorkflowV1alpha1SemaphoreHolding) UnmarshalBinary(b []byte) error {
	var res IoArgoprojWorkflowV1alpha1SemaphoreHolding
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
