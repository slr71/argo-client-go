// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoArgoprojWorkflowV1alpha1GCSArtifact GCSArtifact is the location of a GCS artifact
//
// swagger:model io.argoproj.workflow.v1alpha1.GCSArtifact
type IoArgoprojWorkflowV1alpha1GCSArtifact struct {

	// Bucket is the name of the bucket
	// Required: true
	Bucket *string `json:"bucket"`

	// Key is the path in the bucket where the artifact resides
	// Required: true
	Key *string `json:"key"`

	// ServiceAccountKeySecret is the secret selector to the bucket's service account key
	ServiceAccountKeySecret *IoK8sAPICoreV1SecretKeySelector `json:"serviceAccountKeySecret,omitempty"`
}

// Validate validates this io argoproj workflow v1alpha1 g c s artifact
func (m *IoArgoprojWorkflowV1alpha1GCSArtifact) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBucket(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceAccountKeySecret(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoArgoprojWorkflowV1alpha1GCSArtifact) validateBucket(formats strfmt.Registry) error {

	if err := validate.Required("bucket", "body", m.Bucket); err != nil {
		return err
	}

	return nil
}

func (m *IoArgoprojWorkflowV1alpha1GCSArtifact) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", m.Key); err != nil {
		return err
	}

	return nil
}

func (m *IoArgoprojWorkflowV1alpha1GCSArtifact) validateServiceAccountKeySecret(formats strfmt.Registry) error {
	if swag.IsZero(m.ServiceAccountKeySecret) { // not required
		return nil
	}

	if m.ServiceAccountKeySecret != nil {
		if err := m.ServiceAccountKeySecret.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceAccountKeySecret")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this io argoproj workflow v1alpha1 g c s artifact based on the context it is used
func (m *IoArgoprojWorkflowV1alpha1GCSArtifact) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateServiceAccountKeySecret(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoArgoprojWorkflowV1alpha1GCSArtifact) contextValidateServiceAccountKeySecret(ctx context.Context, formats strfmt.Registry) error {

	if m.ServiceAccountKeySecret != nil {
		if err := m.ServiceAccountKeySecret.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceAccountKeySecret")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoArgoprojWorkflowV1alpha1GCSArtifact) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoArgoprojWorkflowV1alpha1GCSArtifact) UnmarshalBinary(b []byte) error {
	var res IoArgoprojWorkflowV1alpha1GCSArtifact
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
