// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IoArgoprojWorkflowV1alpha1ContinueOn ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
//
// swagger:model io.argoproj.workflow.v1alpha1.ContinueOn
type IoArgoprojWorkflowV1alpha1ContinueOn struct {

	// error
	Error bool `json:"error,omitempty"`

	// failed
	Failed bool `json:"failed,omitempty"`
}

// Validate validates this io argoproj workflow v1alpha1 continue on
func (m *IoArgoprojWorkflowV1alpha1ContinueOn) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this io argoproj workflow v1alpha1 continue on based on context it is used
func (m *IoArgoprojWorkflowV1alpha1ContinueOn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IoArgoprojWorkflowV1alpha1ContinueOn) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoArgoprojWorkflowV1alpha1ContinueOn) UnmarshalBinary(b []byte) error {
	var res IoArgoprojWorkflowV1alpha1ContinueOn
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
